diff --git a/fitsio-sys/ext/cfitsio/putcol.c b/fitsio-sys/ext/cfitsio/putcol.c
index 5263397..9e43476 100644
--- a/fitsio-sys/ext/cfitsio/putcol.c
+++ b/fitsio-sys/ext/cfitsio/putcol.c
@@ -1111,7 +1111,7 @@ int ffiter(int n_cols,
     long rept, rowrept, width, tnull, naxes[9] = {1,1,1,1,1,1,1,1,1}, groups;
     double zeros = 0.;
     char message[FLEN_ERRMSG], keyname[FLEN_KEYWORD], nullstr[FLEN_VALUE];
-    char **stringptr, *nullptr, *cptr;
+    char **stringptr, *null_ptr, *cptr;
 
     if (*status > 0)
         return(*status);
@@ -1881,24 +1881,24 @@ int ffiter(int n_cols,
           {
             stringptr = cols[jj].array;
             dataptr = stringptr + 1;
-            nullptr = *stringptr;
+            null_ptr = *stringptr;
             nbytes = 2;
           }
           else
           {
             dataptr = (char *) cols[jj].array + col[jj].nullsize;
-            nullptr = (char *) cols[jj].array;
+            null_ptr = (char *) cols[jj].array;
             nbytes = col[jj].nullsize;
           }
 
-          if (memcmp(nullptr, &zeros, nbytes) ) 
+          if (memcmp(null_ptr, &zeros, nbytes) ) 
           {
             /* null value flag not zero; must check for and write nulls */
             if (hdutype == IMAGE_HDU)   
             {
                 if (ffppn(cols[jj].fptr, cols[jj].datatype, 
                       felement, cols[jj].repeat * ntodo, dataptr,
-                      nullptr, &tstatus) > 0)
+                      null_ptr, &tstatus) > 0)
                 break;
             }
             else
@@ -1913,7 +1913,7 @@ int ffiter(int n_cols,
 
                 if (ffpcn(cols[jj].fptr, cols[jj].datatype, cols[jj].colnum, frow,
                       felement, cols[jj].repeat * ntodo, dataptr,
-                      nullptr, &tstatus) > 0)
+                      null_ptr, &tstatus) > 0)
                 break;
             }
           }
