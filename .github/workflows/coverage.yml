name: Compute coverage

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'bin/**'
      - 'fitsio/**'
      - 'fitsio-derive/**'
      - 'fitsio-sys/**'
      - 'testdata/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'Cross.toml'
      - 'rust-toolchain.toml'
      - '.github/workflows/*.yml'

  workflow_dispatch:

# Only one pull-request triggered run should be executed at a time
# (head_ref is only set for PR events, otherwise fallback to run_id which differs for every run).
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Install ubuntu dependencies
        run: |
          sudo apt-get update && sudo apt-get install --no-install-recommends -y \
            build-essential \
            llvm-dev \
            libcfitsio-dev \
            pkg-config \
            libssl-dev \
            python3
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov -p fitsio --locked --lcov --output-path lcov.info
      - name: Record Rust version
        run: echo "RUST=$(rustc --version)" >> "$GITHUB_ENV"
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,RUST
